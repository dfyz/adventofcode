Часть 1
-------

`grp_ne` разбивает строку на подотрезки с одинаковыми символами:

  grp_ne "312211"
(,"3"
 ,"1"
 "22"
 "11")

 Сначала с помощью диадного глагола `~` (равенство) и наречия `':` (применить к последовательным парам)
 получаем единицы для тех позиций исходной строки, в которых элемент строки равен следующему элементу
 (а во всех остальных позициях будут нули):

   ~':"312211"
0 0 1 0 1

Отрицаем монадным глаголом `~`:

  ~~':"312211"
1 1 0 1 0

С помощью монадного глагола `&` (https://github.com/kevinlawler/kona/wiki/Where) переходим к списку индексов,
на которых стоят единички:

  &~~':"312211"
0 1 3

Сдвигаем индексы на единицу вправо диадным глаголом `+`:

  1+&~~':"312211"
1 2 4

Дописываем в начало нолик диадным глаголом `,`:

  0,1+&~~':"312211"
0 1 2 4

И разбиваем исходную строку по этим индексам диадным глаголом `_` (https://github.com/kevinlawler/kona/wiki/Drop-cut):

  (0,1+&~~':"312211") _ "312211"
(,"3"
 ,"1"
 "22"
 "11")

Часть 2
-------

`grp` — это просто обёртка над `grp_ne`, которая обеспечивает корректную работу со строками длины 1, так как наречие `':` из части 1
выдаёт фигню на строках длины 1:

  grp_ne["11"]
,"11"
  grp_ne["1"]
type error

В `grp` используется условное выражение :[COND;TRUE;FALSE] и монадный глагол `#` (длина массива/строки).

Часть 3
-------

Функция `nxt` делает одну итерацию "проговаривания вслух" строки:

  nxt["312211"]
"13112221"

Используя наречие `'` (применить функцию ко всем элементам списка) и монадный глагол `#` (длина списка), получаем список длин всех
подоотрезков строки:

  {#x}'grp["312211"]
1 1 2 2

С помощью монадного глагола `$` переводим длины в строки:

  {$#x}'grp["312211"]
(,"1"
 ,"1"
 ,"2"
 ,"2")

Затем с помощью монадного глагола `*` (взять первый элемент) дописываем к каждой длине элемент, который находится в подотрезке
(для дописывания используем уже знакомый глагол `,`; двоеточик после глагола `#` нужно, чтобы зафорсить монадную форму):

  {($#:x),(*x)}'grp["312211"]
("13"
 "11"
 "22"
 "21")

После этого осталось только склеить всё в одну большую мегастроку глаголом `,` с наречием `/` (https://github.com/kevinlawler/kona/wiki/Over):

  ,/{($#:x),(*x)}'grp["312211"]
"13112221"

Часть 4
-------

Теперь берём второй аргумент командной строки (в первом записано имя скрипта, а во второй мы как раз кладём нужное количество итераций)
и парсим его диадной версией глагола `$` (https://github.com/kevinlawler/kona/wiki/Dollar):

  0$_a[2]
5

С помощью глагола `nxt` из части 3 и наречия '/' делаем нужное количество итераций:

  (0$_a[2]) nxt/"312211"
"11131221133112132113212221"

И находим длину результата глаголом `#`:

  #(0$_a[2]) nxt/"312211"
26

Задача решена.